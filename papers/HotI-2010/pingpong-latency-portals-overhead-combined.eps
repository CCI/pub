%!PS-Adobe-2.0 EPSF-2.0
%%Title: pingpong-latency-portals-overhead-combined.eps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Jul  1 14:02:48 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (pingpong-latency-portals-overhead-combined.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (eac)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul  1 14:02:48 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
840 722 M
63 0 V
6128 0 R
-63 0 V
stroke
756 722 M
[ [(Helvetica) 140.0 0.0 true true 0 (-200)]
] -46.7 MRshow
1.000 UL
LTb
840 884 M
63 0 V
6128 0 R
-63 0 V
stroke
756 884 M
[ [(Helvetica) 140.0 0.0 true true 0 (-100)]
] -46.7 MRshow
1.000 UL
LTb
840 1045 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1045 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
840 1207 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1207 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
840 1369 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1369 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
840 1531 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1531 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MRshow
1.000 UL
LTb
840 1692 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1692 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MRshow
1.000 UL
LTb
840 1854 M
63 0 V
6128 0 R
-63 0 V
stroke
756 1854 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
1.000 UL
LTb
840 560 M
0 63 V
0 1393 R
0 -63 V
stroke
840 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1316 560 M
0 63 V
0 1393 R
0 -63 V
stroke
1316 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1792 560 M
0 63 V
0 1393 R
0 -63 V
stroke
1792 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
2269 560 M
0 63 V
0 1393 R
0 -63 V
stroke
2269 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
2745 560 M
0 63 V
0 1393 R
0 -63 V
stroke
2745 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16)]
] -46.7 MCshow
1.000 UL
LTb
3221 560 M
0 63 V
0 1393 R
0 -63 V
stroke
3221 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 32)]
] -46.7 MCshow
1.000 UL
LTb
3697 560 M
0 63 V
0 1393 R
0 -63 V
stroke
3697 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 64)]
] -46.7 MCshow
1.000 UL
LTb
4174 560 M
0 63 V
0 1393 R
0 -63 V
stroke
4174 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 128)]
] -46.7 MCshow
1.000 UL
LTb
4650 560 M
0 63 V
0 1393 R
0 -63 V
stroke
4650 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 256)]
] -46.7 MCshow
1.000 UL
LTb
5126 560 M
0 63 V
0 1393 R
0 -63 V
stroke
5126 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 512)]
] -46.7 MCshow
1.000 UL
LTb
5602 560 M
0 63 V
0 1393 R
0 -63 V
stroke
5602 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1024)]
] -46.7 MCshow
1.000 UL
LTb
6079 560 M
0 63 V
0 1393 R
0 -63 V
stroke
6079 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2048)]
] -46.7 MCshow
1.000 UL
LTb
6555 560 M
0 63 V
0 1393 R
0 -63 V
stroke
6555 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4096)]
] -46.7 MCshow
1.000 UL
LTb
7031 560 M
0 63 V
0 1393 R
0 -63 V
stroke
7031 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8192)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
840 2016 N
840 560 L
6191 0 V
0 1456 V
-6191 0 V
Z stroke
LCb setrgbcolor
266 1288 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (CCI Overhead [ns])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3935 210 M
[ [(Helvetica) 140.0 0.0 true true 0 (Message Size \(bytes\))]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
840 1045 M
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
62 0 V
63 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
4.000 UL
LT4
840 1353 M
476 48 V
476 33 V
477 0 V
476 97 V
476 -17 V
476 49 V
477 -32 V
476 0 V
476 -81 V
476 -113 V
6079 964 L
6555 641 L
476 631 V
840 1353 Star
1316 1401 Star
1792 1434 Star
2269 1434 Star
2745 1531 Star
3221 1514 Star
3697 1563 Star
4174 1531 Star
4650 1531 Star
5126 1450 Star
5602 1337 Star
6079 964 Star
6555 641 Star
7031 1272 Star
% End plot #2
% Begin plot #3
1.000 UP
4.000 UL
LT1
840 1595 M
476 17 V
476 0 V
477 0 V
476 258 V
476 -80 V
476 32 V
477 16 V
476 0 V
476 -65 V
476 -16 V
477 -372 V
6555 835 L
476 550 V
840 1595 Box
1316 1612 Box
1792 1612 Box
2269 1612 Box
2745 1870 Box
3221 1790 Box
3697 1822 Box
4174 1838 Box
4650 1838 Box
5126 1773 Box
5602 1757 Box
6079 1385 Box
6555 835 Box
7031 1385 Box
% End plot #3
1.000 UL
LTb
840 2016 N
840 560 L
6191 0 V
0 1456 V
-6191 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
840 2016 M
63 0 V
6128 0 R
-63 0 V
stroke
756 2016 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
840 2281 M
63 0 V
6128 0 R
-63 0 V
stroke
756 2281 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
840 2545 M
63 0 V
6128 0 R
-63 0 V
stroke
756 2545 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
840 2810 M
63 0 V
6128 0 R
-63 0 V
stroke
756 2810 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MRshow
1.000 UL
LTb
840 3074 M
63 0 V
6128 0 R
-63 0 V
stroke
756 3074 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MRshow
1.000 UL
LTb
840 3339 M
63 0 V
6128 0 R
-63 0 V
stroke
756 3339 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
840 3603 M
63 0 V
6128 0 R
-63 0 V
stroke
756 3603 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MRshow
1.000 UL
LTb
840 3868 M
63 0 V
6128 0 R
-63 0 V
stroke
756 3868 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14)]
] -46.7 MRshow
1.000 UL
LTb
840 4132 M
63 0 V
6128 0 R
-63 0 V
stroke
756 4132 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16)]
] -46.7 MRshow
1.000 UL
LTb
840 4397 M
63 0 V
6128 0 R
-63 0 V
stroke
756 4397 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18)]
] -46.7 MRshow
1.000 UL
LTb
840 4661 M
63 0 V
6128 0 R
-63 0 V
stroke
756 4661 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTb
840 4661 N
0 -2645 V
6191 0 V
0 2645 V
-6191 0 V
Z stroke
LCb setrgbcolor
350 3338 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Time [)]
[(Symbol) 140.0 0.0 true true 0 (m)]
[(Helvetica) 140.0 0.0 true true 0 (s])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
3935 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 (Active Message Latency \(1/2 RTT\) on Portals/SeaStar)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
4.000 UL
LT2
LCb setrgbcolor
2184 4528 M
[ [(Helvetica) 140.0 0.0 true true 0 (Portals Copy)]
] -46.7 MRshow
LT2
2268 4528 M
399 0 V
840 2751 M
476 0 V
476 0 V
477 0 V
476 -1 V
476 599 V
476 -3 V
477 2 V
476 2 V
476 11 V
476 13 V
477 82 V
476 125 V
476 236 V
840 2751 Pls
1316 2751 Pls
1792 2751 Pls
2269 2751 Pls
2745 2750 Pls
3221 3349 Pls
3697 3346 Pls
4174 3348 Pls
4650 3350 Pls
5126 3361 Pls
5602 3374 Pls
6079 3456 Pls
6555 3581 Pls
7031 3817 Pls
2467 4528 Pls
% End plot #1
% Begin plot #2
1.000 UP
4.000 UL
LT0
LCb setrgbcolor
2184 4388 M
[ [(Helvetica) 140.0 0.0 true true 0 (Portals Bind)]
] -46.7 MRshow
LT0
2268 4388 M
399 0 V
840 2786 M
476 1 V
476 0 V
477 0 V
476 1 V
476 595 V
476 0 V
477 0 V
476 0 V
476 2 V
476 1 V
477 85 V
476 86 V
476 174 V
840 2786 Crs
1316 2787 Crs
1792 2787 Crs
2269 2787 Crs
2745 2788 Crs
3221 3383 Crs
3697 3383 Crs
4174 3383 Crs
4650 3383 Crs
5126 3385 Crs
5602 3386 Crs
6079 3471 Crs
6555 3557 Crs
7031 3731 Crs
2467 4388 Crs
% End plot #2
% Begin plot #3
1.000 UP
4.000 UL
LT4
LCb setrgbcolor
2184 4248 M
[ [(Helvetica) 140.0 0.0 true true 0 (CCI)]
] -46.7 MRshow
LT4
2268 4248 M
399 0 V
840 2776 M
476 4 V
476 3 V
477 0 V
476 7 V
476 597 V
476 2 V
477 -2 V
476 3 V
476 4 V
476 4 V
477 52 V
476 97 V
476 289 V
840 2776 Star
1316 2780 Star
1792 2783 Star
2269 2783 Star
2745 2790 Star
3221 3387 Star
3697 3389 Star
4174 3387 Star
4650 3390 Star
5126 3394 Star
5602 3398 Star
6079 3450 Star
6555 3547 Star
7031 3836 Star
2467 4248 Star
% End plot #3
% Begin plot #4
1.000 UP
4.000 UL
LT1
LCb setrgbcolor
2184 4108 M
[ [(Helvetica) 140.0 0.0 true true 0 (CCI Thread-Safe)]
] -46.7 MRshow
LT1
2268 4108 M
399 0 V
840 2796 M
476 2 V
476 0 V
477 0 V
476 19 V
476 593 V
476 0 V
477 3 V
476 2 V
476 5 V
476 12 V
477 52 V
476 79 V
476 282 V
840 2796 Box
1316 2798 Box
1792 2798 Box
2269 2798 Box
2745 2817 Box
3221 3410 Box
3697 3410 Box
4174 3413 Box
4650 3415 Box
5126 3420 Box
5602 3432 Box
6079 3484 Box
6555 3563 Box
7031 3845 Box
2467 4108 Box
% End plot #4
% Begin plot #5
1.000 UP
4.000 UL
LT3
LCb setrgbcolor
2184 3968 M
[ [(Helvetica) 140.0 0.0 true true 0 (MPI)]
] -46.7 MRshow
LT3
2268 3968 M
399 0 V
840 2874 M
476 3 V
476 1 V
477 -1 V
476 0 V
476 595 V
476 1 V
477 2 V
476 4 V
476 31 V
476 22 V
477 91 V
476 170 V
476 385 V
840 2874 BoxF
1316 2877 BoxF
1792 2878 BoxF
2269 2877 BoxF
2745 2877 BoxF
3221 3472 BoxF
3697 3473 BoxF
4174 3475 BoxF
4650 3479 BoxF
5126 3510 BoxF
5602 3532 BoxF
6079 3623 BoxF
6555 3793 BoxF
7031 4178 BoxF
2467 3968 BoxF
% End plot #5
1.000 UL
LTb
840 4661 N
0 -2645 V
6191 0 V
0 2645 V
-6191 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
